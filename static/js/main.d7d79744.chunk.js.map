{"version":3,"sources":["components/navBar/index.js","components/tableViews/navigator/index.js","components/tableViews/searchBar/index.js","components/tableViews/tableView/markups/tableHeader.js","components/tableViews/tableView/markups/tableRow.js","components/tableViews/tableView/index.js","components/tableViews/pagination/index.js","components/tableViews/index.js","components/detailedView/index.js","utilities/sorting.js","components/App.js","serviceWorker.js","index.js"],"names":["NavBar","props","handleBackClick","react_default","a","createElement","className","showBackBtn","style","border","cursor","backgroundColor","color","onClick","marginLeft","Navigator","handleNextClick","handlePreviousClick","SearchBar","activePaginationIndex","duplicateData","pageSize","customPage","length","startNum","endNum","searchLabel","concat","placeholder","onChange","searchNameHandler","value","TableHeader","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSortingState","heading","prevState","objectSpread","state","sortingState","key","sortingOrder","resetSortingIcon","setState","handleSorting","o","First Name","Last Name","Company Name","City","State","Zip","Email","Web","Age","HEADINGS","_this2","headingMarkUp","map","index","directionIcon","React","Component","TableRow","rowData","handleRowClick","id","first_name","last_name","company_name","city","zip","email","web","age","TableView","tableRows","responseData","markups_tableRow","markups_tableHeader","Pagination","paginationBtn","data","paginationStartIndex","handlePaginationClickChange","paginationButtons","paginationStartIndexIs","end","Math","ceil","_loop","handlePagination","push","clear","textAlign","TableViews","searchValue","Fragment","components_navBar","tableViews_searchBar","tableViews_tableView","components_tableViews_navigator","tableViews_pagination","personalDetails","arr","DetailedView","_props$detailedObj","detailedObj","CUSTOM_SORT","getAppropriateKey","sortInAsc","sortInDesc","i","j","swap","finalPosition","foundElementIndex","temp","App","event","finalArr","duplicateResTwo","filter","element","target","toLowerCase","indexOf","fn","response","slice","duplicateRes","cloneResTwo","toConsumableArray","find","history","goBack","cloneRes","sizeOfPages","startIndex","endIndex","p","operation","renderSwitch","pathName","location","pathname","split","components_detailedView","components_tableViews","fetch","res","json","withRouter","Boolean","window","hostname","match","ReactDOM","render","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7d79744.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\n\r\nconst NavBar = (props) => {\r\n    const { handleBackClick } = props;\r\n    return (\r\n        <div className='navBar'>\r\n            { props.showBackBtn ? \r\n            <button style={{border:'none',cursor:'pointer', backgroundColor:'transparent',\r\n             color:'white'}} onClick={ handleBackClick }>\r\n                <i className=\"fas fa-arrow-left fa-lg\"></i>\r\n                <span style={{marginLeft:'20px'}}>Data Peace</span>\r\n            </button>\r\n            :\r\n            <span className='burgerMenu'>\r\n                <i className=\"fas fa-bars\"></i>\r\n                <span style={{marginLeft:'20px'}}>Data Peace</span>\r\n            </span> }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './index.css';\r\n\r\nconst Navigator = ( props ) => {\r\n    const { handleNextClick, handlePreviousClick } = props;\r\n\r\n    return(\r\n        <div className='navigatorContainer'>\r\n            <div className='leftBtn'>\r\n                <button className='navigatorBtn' \r\n                    onClick={handlePreviousClick}>Previous</button>\r\n            </div>\r\n            <div className='rightBtn'>\r\n                <button className='navigatorBtn' \r\n                    onClick={handleNextClick}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigator;","import React from 'react';\r\nimport './index.css';\r\nconst SearchBar = ( props ) => {\r\n    const { activePaginationIndex, duplicateData, pageSize  }  = props;\r\n    const customPage = duplicateData.length < 5  ? duplicateData.length : pageSize; \r\n    let startNum = ( activePaginationIndex *  customPage ) - customPage + 1;\r\n    startNum = duplicateData.length === 0 ? 0 : startNum; \r\n    const endNum = startNum + customPage - 1;\r\n    const length = duplicateData.length;\r\n    const searchLabel = duplicateData.length === 0 ? \"0-0 of 0\" : `${startNum}-${endNum} of ${length}`;\r\n    return(\r\n        <div className='searchContainer row'> \r\n            <div>\r\n                <input className='searchInput' placeholder='Search by first name' \r\n                    onChange={props.searchNameHandler} value={props.value}/>\r\n            </div>\r\n            <div className='paginationCount'>\r\n                { searchLabel }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './tableHeader.css';\r\n\r\nclass TableHeader extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      sortingState : { 'First Name': 'asc', 'Last Name' :  'asc', 'Company Name' : 'asc',\r\n      'City' : 'asc', 'State' : 'asc', 'Zip' : 'asc', 'Email' : 'asc', 'Web' : 'asc', 'Age' : 'asc'  }\r\n    }\r\n    this.HEADINGS = ['First Name', 'Last Name', 'Company Name', 'City', 'State',\r\n    'Zip', 'Email', 'Web', 'Age']; \r\n    \r\n  }\r\n\r\n  handleSortingState = (heading) => {\r\n    const prevState = { ...this.state };\r\n    const sortingState = { key : null, sortingOrder : null };\r\n    sortingState.key = heading;\r\n    sortingState.sortingOrder = prevState.sortingState[heading];\r\n    prevState.sortingState[heading] = prevState.sortingState[heading] === 'asc' ? 'desc' : 'asc';\r\n    this.resetSortingIcon(heading, prevState);\r\n    this.setState(prevState, () => this.props.handleSorting(sortingState) );\r\n    \r\n  }\r\n    \r\n  resetSortingIcon = (heading, prevState) => {\r\n    for (let o in prevState.sortingState){\r\n      if(o !== heading)\r\n        prevState.sortingState[o] = 'asc';\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const headingMarkUp = this.HEADINGS.map((heading, index) => {\r\n\r\n      let directionIcon = this.state.sortingState[heading] === 'asc' ? <i className=\"fas fa-caret-down\"></i> :\r\n        <i className=\"fas fa-caret-up\"></i> ;\r\n      return( <th className='tableHeader' \r\n        onClick={() => this.handleSortingState(heading) } \r\n        key={index}> { directionIcon } {heading} \r\n        \r\n    </th>); });\r\n        return(\r\n          <tr>\r\n            { headingMarkUp }\r\n          </tr>\r\n      );\r\n  }\r\n};\r\nexport default TableHeader;","import React from 'react';\r\nimport './tableRow.css';\r\n\r\nconst TableRow = (props) => {\r\n  const { rowData } = props;\r\n  return(\r\n      <tr className='tableRow' onClick={()=>props.handleRowClick(props.rowData.id)}>\r\n        <td> { rowData.first_name } </td>\r\n        <td> { rowData.last_name } </td>\r\n        <td> { rowData.company_name } </td>\r\n        <td> { rowData.city } </td>\r\n        <td> { rowData.state } </td>\r\n        <td> { rowData.zip } </td>\r\n        <td> { rowData.email } </td>\r\n        <td style={{color:'#50a4f3'}} > { rowData.web } </td>\r\n        <td> { rowData.age } </td>\r\n      </tr>\r\n    \r\n  );\r\n};\r\n\r\n\r\nexport default TableRow;","import React from 'react';\r\nimport './index.css';\r\nimport TableHeader from './markups/tableHeader';\r\nimport TableRow from './markups/tableRow';\r\n\r\nconst TableView = (props) => {\r\n  const tableRows = props.responseData.map((rowData, index) => <TableRow key={index} \r\n    rowData={rowData} handleRowClick={props.handleRowClick} />);\r\n  return(\r\n    <table>\r\n      <thead>\r\n        <TableHeader handleSorting={props.handleSorting} />\r\n      </thead>\r\n      <tbody>\r\n        { tableRows }\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TableView;","import React from 'react';\r\nimport './index.css';\r\n\r\nconst Pagination = (props) => {\r\n    const { pageSize, data, activePaginationIndex, paginationStartIndex, handlePaginationClickChange } = props;\r\n    const paginationButtons = [];\r\n    let paginationBtn;\r\n    let className;\r\n    let paginationStartIndexIs = paginationStartIndex * 14 + 1;\r\n    let end = paginationStartIndexIs + 14 - 1;\r\n    end  = end > Math.ceil( data.length / pageSize ) ? Math.ceil(data.length / pageSize) : end; \r\n    for(let index=paginationStartIndexIs; index<=end; index++){\r\n        if(index === activePaginationIndex )\r\n            className = 'activePaginationBtn';\r\n        else\r\n            className = 'paginationBtn';\r\n        paginationBtn = <button key={index} className={className} \r\n            onClick={() => props.handlePagination(index)}>{ index }</button> ;\r\n\r\n            paginationButtons.push(paginationBtn);\r\n    }\r\n    return(\r\n        <h1 style={{clear:'both', textAlign:'center'}}>\r\n            <button className='paginationBtn' onClick={()=>handlePaginationClickChange('-')} > &laquo; </button>\r\n            { paginationButtons }\r\n            <button className='paginationBtn' onClick={()=>handlePaginationClickChange('+')} > &raquo; </button>\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport NavBar from '../navBar';\r\nimport Navigator from './navigator';\r\nimport SearchBar from './searchBar';\r\nimport TableView from './tableView';\r\nimport './index.css';\r\nimport Pagination from './pagination';\r\n\r\nconst TableViews = (props) => {\r\n    const { responseData, activePaginationIndex, duplicateData,\r\n      searchNameHandler, handleNextClick, handlePreviousClick, handleRowClick, \r\n      handleSorting , handlePagination, pageSize, paginationStartIndex,\r\n      handlePaginationClickChange, searchValue } = props;\r\n\r\n    return(\r\n        <>\r\n          <NavBar />\r\n          <div className=\"appContainer\">\r\n            <SearchBar searchNameHandler={searchNameHandler} pageSize={pageSize} \r\n              value={searchValue}\r\n              activePaginationIndex={activePaginationIndex} duplicateData={duplicateData} />\r\n            <TableView\r\n              responseData={responseData}\r\n              handleRowClick={handleRowClick}\r\n              handleSorting={handleSorting}\r\n            />\r\n            <Navigator handleNextClick={handleNextClick} handlePreviousClick={handlePreviousClick} />\r\n            <Pagination data={ duplicateData } pageSize={pageSize} \r\n              activePaginationIndex={activePaginationIndex}\r\n              paginationStartIndex={paginationStartIndex}\r\n              handlePagination={handlePagination}\r\n              handlePaginationClickChange={handlePaginationClickChange} />\r\n          </div>\r\n        </>\r\n    );\r\n};\r\nexport default TableViews;\r\n","import React from 'react';\r\nimport NavBar from '../navBar';\r\nimport './index.css';\r\n\r\nconst DetailedView = (props) => {\r\n    const { age, city, company_name, email, first_name,\r\n        last_name, state, web, zip } = props.detailedObj;\r\n\r\n    const arr = [ ['Company', company_name ], ['City', city] ,['State', state],\r\n        ['Zip', zip], ['Email', email], ['Web', web], ['Age', age] ];\r\n\r\n    return(\r\n        <>\r\n            <NavBar showBackBtn handleBackClick={ props.handleBackClick } />\r\n            <div className='detailedViewContainer'>\r\n                <h2 className='nameField'>{`${first_name} ${last_name}`}</h2>\r\n            \r\n            { personalDetails (arr) }\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst personalDetails = (arr) => {\r\n    const markup = arr.map((data, index) => {\r\n        return(\r\n            <div key={index}>\r\n                <div className='personalDetail'>\r\n                    <div> { data[0] } </div>\r\n                    <div className='valueField'>{ data[1] }</div>\r\n                </div>\r\n                <div className='seperator' />\r\n            </div>\r\n        );\r\n    });\r\n    return markup;\r\n    \r\n}\r\n\r\nexport default DetailedView;","// Selection sort\r\nexport const CUSTOM_SORT = (data, sortingState) => {\r\n    let key = getAppropriateKey(sortingState.key);\r\n    if(sortingState.sortingOrder === 'asc')\r\n        sortInAsc(data, key);\r\n    else\r\n        sortInDesc(data, key);\r\n    return data;\r\n};  \r\n\r\nconst sortInDesc = (data, key) => {\r\n    for(let i = 0; i < data.length - 1; i++){\r\n        for(let j = i+1; j < data.length; j++){\r\n            if(data[j][key] > data[i][key]){\r\n                swap(data, i, j);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst sortInAsc = (data, key) => {\r\n    for(let i = 0; i < data.length - 1; i++){\r\n        for(let j = i+1; j < data.length; j++){\r\n            if(data[j][key] < data[i][key]){\r\n                swap(data, i, j);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst swap = (data, finalPosition, foundElementIndex) => {\r\n    const temp = data[finalPosition];\r\n    data[finalPosition] = data[foundElementIndex];\r\n    data[foundElementIndex] = temp;\r\n};\r\n\r\nconst getAppropriateKey = (key) => {\r\n    const KEYS = { \"First Name\" : \"first_name\", \"Last Name\" : \"last_name\",\r\n    \"Company Name\" : \"company_name\", \"City\" : \"city\", \"State\" : \"state\",\r\n    \"Zip\" : \"zip\", \"Email\" : \"email\", \"Web\" : \"web\", \"Age\" : \"age\" };\r\n    return KEYS[key];\r\n} \r\n\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport TableViews from './tableViews';\r\nimport DetailedView from \"./detailedView\";\r\nimport { CUSTOM_SORT } from '../utilities/sorting';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: [], duplicateRes: [], detailedObj : {}, cloneRes : [], paginationStartIndex : 0,\r\n      searchValue : '', activePaginationIndex : 1,\r\n    };\r\n    this.sizeOfPages = 5;\r\n    this.activePaginationIndex = 1; \r\n  }\r\n  async componentDidMount() {\r\n    const res = await fetch(\"https://demo9197058.mockable.io/users\");\r\n    const json = await res.json();\r\n    const sizeOfPages = this.sizeOfPages; \r\n    this.setState({\r\n      response: json.slice(0, sizeOfPages),\r\n      cloneRes : json.slice(0, sizeOfPages),\r\n      cloneResTwo : json.slice(0, sizeOfPages),\r\n      duplicateRes: json,\r\n      duplicateResTwo : json\r\n    });\r\n  }\r\n\r\n  componentWillMount(){\r\n    if( this.props.location.pathname.length > 1 )\r\n      this.props.history.push('/');\r\n  }\r\n\r\n  searchNameHandler = event => {\r\n    const state = { ...this.state };\r\n    const finalArr = state.duplicateResTwo.filter(element => {\r\n      if (event.target.value === \"\") return element;\r\n      else if ( element.first_name\r\n        .toLowerCase()\r\n        .indexOf(event.target.value.toLowerCase()) > -1 )\r\n        return element;\r\n      return null;\r\n    });\r\n    const fn = event.target.value ? {\r\n      response : finalArr.slice(0,5),\r\n      duplicateRes : finalArr,\r\n      activePaginationIndex : 1\r\n    }\r\n     :\r\n      {\r\n        response : state.cloneResTwo,\r\n        duplicateRes : state.duplicateResTwo,\r\n        activePaginationIndex : 1\r\n      }\r\n    this.setState({ ...fn, searchValue : event.target.value });\r\n  };\r\n\r\n  handleRowClick = id => {\r\n    const rowData = [ ...this.state.response ];\r\n    const detailedObj = rowData.find(element => element.id === id);\r\n    this.setState({ detailedObj }, () => this.props.history.push(`/user/${id}`) );\r\n  };\r\n\r\n  handleBackClick = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  handleSorting = (sortingState) => {\r\n    const prevState = { ...this.state };\r\n    const data = CUSTOM_SORT(prevState.duplicateRes, sortingState);\r\n    prevState.response = data.slice(0, 5);\r\n    prevState.cloneRes = data.slice(0, 5);\r\n    prevState.cloneResTwo = data.slice(0, 5);\r\n    prevState.duplicateRes = data;\r\n    prevState.duplicateResTwo = data;\r\n    this.setState( prevState, ()=>this.handlePagination(prevState.activePaginationIndex) );\r\n  }\r\n\r\n  handlePagination = (index) => {\r\n    const pageSize = this.sizeOfPages;\r\n    const prevState = { ...this.state };\r\n    const startIndex = ( index * pageSize ) - pageSize;\r\n    const endIndex = startIndex + pageSize;\r\n    prevState.activePaginationIndex =index;\r\n    prevState.response = prevState.duplicateRes.slice(startIndex, endIndex);\r\n    prevState.cloneRes = prevState.duplicateRes.slice(startIndex, endIndex);;\r\n    this.setState(prevState);\r\n  }\r\n\r\n  handleNextClick = () => {\r\n    const p = Math.ceil( this.state.duplicateRes.length / this.sizeOfPages );\r\n    if(this.state.activePaginationIndex < p)\r\n      this.handlePagination(this.state.activePaginationIndex + 1 );\r\n  }\r\n  handlePreviousClick = () => {\r\n    if(this.state.activePaginationIndex > 1)\r\n      this.handlePagination(this.state.activePaginationIndex - 1 );\r\n  }\r\n\r\n  handlePaginationClickChange = (operation) =>{\r\n    const prevState = { ...this.state };\r\n    if(operation === '+'){\r\n      prevState.paginationStartIndex =  prevState.paginationStartIndex + 1;\r\n      if( (prevState.duplicateRes.length / 5  ) > (prevState.paginationStartIndex * 14 + 1) )\r\n        this.setState(prevState);\r\n    }\r\n    else{\r\n      prevState.paginationStartIndex =  prevState.paginationStartIndex - 1;\r\n      if(prevState.paginationStartIndex > -1 )\r\n        this.setState(prevState);\r\n    }\r\n  }\r\n\r\n  renderSwitch = () => {\r\n    const pathName = this.props.location.pathname;\r\n    const id = pathName.split('/')[2]; \r\n\r\n    switch ( pathName ) {\r\n      case `/user/${id}` :\r\n        return( <DetailedView detailedObj={this.state.detailedObj} \r\n          handleBackClick={this.handleBackClick} /> \r\n        );\r\n\r\n      default : \r\n        return (\r\n          <TableViews \r\n            activePaginationIndex={this.state.activePaginationIndex}\r\n            pageSize={this.sizeOfPages}\r\n            responseData={this.state.response}\r\n            duplicateData={this.state.duplicateRes}\r\n            paginationStartIndex={this.state.paginationStartIndex}\r\n            handleRowClick={this.handleRowClick}\r\n            handleSorting={this.handleSorting}\r\n            searchNameHandler={this.searchNameHandler} \r\n            handlePagination={this.handlePagination}\r\n            handleNextClick={this.handleNextClick}\r\n            handlePreviousClick={this.handlePreviousClick}\r\n            handlePaginationClickChange={this.handlePaginationClickChange}\r\n            searchValue={this.state.searchValue}\r\n            />\r\n        );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        { this.renderSwitch() }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}